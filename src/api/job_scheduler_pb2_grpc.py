# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: job_scheduler.proto
"""Generated protocol buffer code."""
import grpc

from . import job_scheduler_pb2 as job__scheduler__pb2


class JobSchedulerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitJob = channel.unary_unary(
                '/job_scheduler.JobSchedulerService/SubmitJob',
                request_serializer=job__scheduler__pb2.SubmitJobRequest.SerializeToString,
                response_deserializer=job__scheduler__pb2.SubmitJobResponse.FromString,
                )
        self.GetJobStatus = channel.unary_unary(
                '/job_scheduler.JobSchedulerService/GetJobStatus',
                request_serializer=job__scheduler__pb2.GetJobStatusRequest.SerializeToString,
                response_deserializer=job__scheduler__pb2.GetJobStatusResponse.FromString,
                )
        self.ListJobs = channel.unary_unary(
                '/job_scheduler.JobSchedulerService/ListJobs',
                request_serializer=job__scheduler__pb2.ListJobsRequest.SerializeToString,
                response_deserializer=job__scheduler__pb2.ListJobsResponse.FromString,
                )


class JobSchedulerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SubmitJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobSchedulerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitJob': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitJob,
                    request_deserializer=job__scheduler__pb2.SubmitJobRequest.FromString,
                    response_serializer=job__scheduler__pb2.SubmitJobResponse.SerializeToString,
            ),
            'GetJobStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobStatus,
                    request_deserializer=job__scheduler__pb2.GetJobStatusRequest.FromString,
                    response_serializer=job__scheduler__pb2.GetJobStatusResponse.SerializeToString,
            ),
            'ListJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListJobs,
                    request_deserializer=job__scheduler__pb2.ListJobsRequest.FromString,
                    response_serializer=job__scheduler__pb2.ListJobsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'job_scheduler.JobSchedulerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JobSchedulerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SubmitJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/job_scheduler.JobSchedulerService/SubmitJob',
            job__scheduler__pb2.SubmitJobRequest.SerializeToString,
            job__scheduler__pb2.SubmitJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/job_scheduler.JobSchedulerService/GetJobStatus',
            job__scheduler__pb2.GetJobStatusRequest.SerializeToString,
            job__scheduler__pb2.GetJobStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/job_scheduler.JobSchedulerService/ListJobs',
            job__scheduler__pb2.ListJobsRequest.SerializeToString,
            job__scheduler__pb2.ListJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
